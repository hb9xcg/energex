Archive member included because of file (symbol)

/opt/cross/avr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_exit.o)
                              /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm644p.o (exit)
/opt/cross/avr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_copy_data.o)
                              bootldr.o (__do_copy_data)
/opt/cross/avr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_clear_bss.o)
                              bootldr.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

bufptr              0x2               bootldr.o
cl                  0x1               bootldr.o
FlashAddr           0x2               bootldr.o
buf                 0x100             bootldr.o
ch                  0x1               bootldr.o
pagptr              0x2               bootldr.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm644p.o
Address of section .text set to 0xfc00
LOAD bootldr.o
LOAD /opt/cross/avr/lib/gcc/avr/4.3.3/avr5/libgcc.a
LOAD /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/libc.a
LOAD /opt/cross/avr/lib/gcc/avr/4.3.3/avr5/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x000000000000fc00      0x398
 *(.vectors)
 .vectors       0x000000000000fc00       0x7c /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm644p.o
                0x000000000000fc00                __vectors
                0x000000000000fc00                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x000000000000fc7c                . = ALIGN (0x2)
                0x000000000000fc7c                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x000000000000fc7c        0x0 linker stubs
 *(.trampolines*)
                0x000000000000fc7c                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x000000000000fc7c                __ctors_start = .
 *(.ctors)
                0x000000000000fc7c                __ctors_end = .
                0x000000000000fc7c                __dtors_start = .
 *(.dtors)
                0x000000000000fc7c                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x000000000000fc7c        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm644p.o
                0x000000000000fc7c                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x000000000000fc7c        0xc /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm644p.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x000000000000fc88       0x16 /opt/cross/avr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_copy_data.o)
                0x000000000000fc88                __do_copy_data
 .init4         0x000000000000fc9e       0x10 /opt/cross/avr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_clear_bss.o)
                0x000000000000fc9e                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000000000fcae        0x8 /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm644p.o
 *(.init9)
 *(.text)
 .text          0x000000000000fcb6        0x4 /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm644p.o
                0x000000000000fcb6                __vector_22
                0x000000000000fcb6                __vector_28
                0x000000000000fcb6                __vector_1
                0x000000000000fcb6                __vector_24
                0x000000000000fcb6                __vector_12
                0x000000000000fcb6                __bad_interrupt
                0x000000000000fcb6                __vector_6
                0x000000000000fcb6                __vector_3
                0x000000000000fcb6                __vector_23
                0x000000000000fcb6                __vector_30
                0x000000000000fcb6                __vector_25
                0x000000000000fcb6                __vector_11
                0x000000000000fcb6                __vector_13
                0x000000000000fcb6                __vector_17
                0x000000000000fcb6                __vector_19
                0x000000000000fcb6                __vector_7
                0x000000000000fcb6                __vector_27
                0x000000000000fcb6                __vector_5
                0x000000000000fcb6                __vector_4
                0x000000000000fcb6                __vector_9
                0x000000000000fcb6                __vector_2
                0x000000000000fcb6                __vector_21
                0x000000000000fcb6                __vector_15
                0x000000000000fcb6                __vector_29
                0x000000000000fcb6                __vector_8
                0x000000000000fcb6                __vector_26
                0x000000000000fcb6                __vector_14
                0x000000000000fcb6                __vector_10
                0x000000000000fcb6                __vector_16
                0x000000000000fcb6                __vector_18
                0x000000000000fcb6                __vector_20
 .text          0x000000000000fcba        0x0 bootldr.o
 .text          0x000000000000fcba        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_exit.o)
 .text          0x000000000000fcba        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_copy_data.o)
 .text          0x000000000000fcba        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_clear_bss.o)
                0x000000000000fcba                . = ALIGN (0x2)
 *(.text.*)
 .text.write_one_page
                0x000000000000fcba       0x76 bootldr.o
                0x000000000000fcba                write_one_page
 .text.quit     0x000000000000fd30       0x10 bootldr.o
                0x000000000000fd30                quit
 .text.WriteCom
                0x000000000000fd40       0x1c bootldr.o
                0x000000000000fd40                WriteCom
 .text.WaitCom  0x000000000000fd5c        0xe bootldr.o
                0x000000000000fd5c                WaitCom
 .text.crc16    0x000000000000fd6a       0x46 bootldr.o
                0x000000000000fd6a                crc16
 .text.main     0x000000000000fdb0      0x1e4 bootldr.o
                0x000000000000fdb0                main
 .text.libgcc   0x000000000000ff94        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x000000000000ff94        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x000000000000ff94        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_clear_bss.o)
                0x000000000000ff94                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000000000000ff94        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_exit.o)
                0x000000000000ff94                exit
                0x000000000000ff94                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000000000000ff94        0x4 /opt/cross/avr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x000000000000ff98                _etext = .

.data           0x0000000000800100        0x6 load address 0x000000000000ff98
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm644p.o
 .data          0x0000000000800100        0x5 bootldr.o
                0x0000000000800100                ConnectKey
 .data          0x0000000000800105        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_exit.o)
 .data          0x0000000000800105        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_copy_data.o)
 .data          0x0000000000800105        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800106                . = ALIGN (0x2)
 *fill*         0x0000000000800105        0x1 00
                0x0000000000800106                _edata = .
                0x0000000000800106                PROVIDE (__data_end, .)

.bss            0x0000000000800106      0x108
                0x0000000000800106                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800106        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm644p.o
 .bss           0x0000000000800106        0x0 bootldr.o
 .bss           0x0000000000800106        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_exit.o)
 .bss           0x0000000000800106        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_copy_data.o)
 .bss           0x0000000000800106        0x0 /opt/cross/avr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0000000000800106      0x108 bootldr.o
                0x0000000000800106                bufptr
                0x0000000000800108                cl
                0x0000000000800109                FlashAddr
                0x000000000080010b                buf
                0x000000000080020b                ch
                0x000000000080020c                pagptr
                0x000000000080020e                PROVIDE (__bss_end, .)
                0x000000000000ff98                __data_load_start = LOADADDR (.data)
                0x000000000000ff9e                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x000000000080020e        0x0
                0x000000000080020e                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x000000000080020e                PROVIDE (__noinit_end, .)
                0x000000000080020e                _end = .
                0x000000000080020e                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x0000000000000000      0x6cc
 *(.stab)
 .stab          0x0000000000000000      0x6cc /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm644p.o

.stabstr        0x0000000000000000       0x54
 *(.stabstr)
 .stabstr       0x0000000000000000       0x54 /opt/cross/avr/lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm644p.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x0000000000000000       0x48
 *(.debug_aranges)
 .debug_aranges
                0x0000000000000000       0x48 bootldr.o

.debug_pubnames
                0x0000000000000000       0xa3
 *(.debug_pubnames)
 .debug_pubnames
                0x0000000000000000       0xa3 bootldr.o

.debug_info     0x0000000000000000      0x253
 *(.debug_info)
 .debug_info    0x0000000000000000      0x253 bootldr.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x0000000000000000      0x106
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x106 bootldr.o

.debug_line     0x0000000000000000      0x397
 *(.debug_line)
 .debug_line    0x0000000000000000      0x397 bootldr.o

.debug_frame    0x0000000000000000       0x70
 *(.debug_frame)
 .debug_frame   0x0000000000000000       0x70 bootldr.o

.debug_str      0x0000000000000000       0xcb
 *(.debug_str)
 .debug_str     0x0000000000000000       0xcb bootldr.o
                                         0xff (size before relaxing)

.debug_loc      0x0000000000000000       0xd8
 *(.debug_loc)
 .debug_loc     0x0000000000000000       0xd8 bootldr.o

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(bootldr.elf elf32-avr)
LOAD linker stubs

.debug_ranges   0x0000000000000000       0x40
 .debug_ranges  0x0000000000000000       0x40 bootldr.o
